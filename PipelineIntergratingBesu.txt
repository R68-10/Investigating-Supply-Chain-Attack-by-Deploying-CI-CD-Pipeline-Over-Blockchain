import time

def print_section(title, content):
    print(f"\n{'=' * len(title)}\n{title}\n{'=' * len(title)}")
    print(content)
    time.sleep(1.5)

def describe_project():
    print("\nðŸš€ Blockchain-Based CI/CD Logging Project Overview\n")

    print_section(
        "1. Goal",
        "To create an immutable and transparent record of CI/CD pipeline events by integrating a private Ethereum blockchain (Hyperledger Besu) with Gitea and Jenkins."
    )

    print_section(
        "2. Components",
        """- Gitea: A self-hosted Git service where developers push their code.
- Jenkins: Orchestrates the Build, Test, and Deploy pipeline stages.
- Smart Contract: Logs metadata from pushes and pipeline stages (e.g., who pushed, build status).
- Hyperledger Besu: Runs a private Ethereum-compatible blockchain with QBFT consensus.
- Webhook API: Middleware that listens to Gitea/Jenkins and triggers contract functions."""
    )

    print_section(
        "3. Event Logging Flow",
        """1. Developer pushes code to Gitea.
2. Gitea webhook sends event to API â†’ API logs it on-chain via `logPush`.
3. Jenkins pipeline gets triggered:
   - Build â†’ logs via `logBuild`
   - Test â†’ logs via `logTest`
   - Deploy â†’ logs via `logDeploy`
4. All logs are stored immutably in the smart contract and can be queried."""
    )

    print_section(
        "4. Blockchain Design",
        """- Smart contract stores mappings of each event type.
- Events are emitted for external indexing (e.g., Otterscan, Blockscout).
- Access tokens used to validate webhook authenticity.
- Chain ID: 1337 (private network)."""
    )

    print_section(
        "5. Benefits",
        """- Traceable: Anyone can trace CI/CD actions back to source.
- Immutable: Once logged, entries can not be modified.
- Investigable: Speeds up forensic audits and compliance reviews.
- Decentralized: Validates the integrity of the entire software delivery process."""
    )

    print_section(
        "6. Tech Stack Summary",
        """- Python (Webhook Server)
- Solidity (Smart Contract)
- Ethers.js (Blockchain interaction)
- Docker Desktop (for all services)
- Otterscan or Blockscout (Explorer visualization)
- Jenkinsfile (for CI stages)"""
    )

    print("\nâœ… Project architecture successfully described.")

if __name__ == "__main__":
    describe_project()
